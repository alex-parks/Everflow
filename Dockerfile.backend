FROM docker.io/nvidia/cuda:12.1.1-runtime-ubuntu22.04

# Install Python 3.10
RUN apt-get update && apt-get install -y \
    python3.10 \
    python3.10-venv \
    python3-pip \
    && rm -rf /var/lib/apt/lists/*

# Set python3.10 as default python
RUN ln -sf /usr/bin/python3.10 /usr/bin/python

# Install system dependencies for image processing and EXR support
RUN apt-get update && apt-get install -y \
    libjpeg-dev \
    zlib1g-dev \
    libtiff-dev \
    libfreetype6-dev \
    liblcms2-dev \
    libwebp-dev \
    libopenexr-dev \
    build-essential \
    cmake \
    pkg-config \
    git \
    libgl1-mesa-dri \
    libgl1-mesa-dev \
    libgl1 \
    libglx-mesa0 \
    libegl-mesa0 \
    mesa-utils \
    libglib2.0-0 \
    libgomp1 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    cuda-toolkit-12-1 \
    && rm -rf /var/lib/apt/lists/*

# Set CUDA environment variables
ENV PATH=/usr/local/cuda/bin:${PATH}
ENV LD_LIBRARY_PATH=/usr/local/cuda/lib64:${LD_LIBRARY_PATH}
ENV NVIDIA_VISIBLE_DEVICES=all
ENV NVIDIA_DRIVER_CAPABILITIES=compute,utility

WORKDIR /app

# Install PyTorch with CUDA support first (before other requirements)
RUN pip install torch==2.5.1 torchvision==0.20.1 torchaudio==2.5.1 --index-url https://download.pytorch.org/whl/cu124

# Copy backend requirements and install Python dependencies
COPY backend/requirements.txt ./
RUN pip install --no-cache-dir -r requirements.txt

# Clone and install Hunyuan3D-2.1
RUN git clone https://github.com/Tencent-Hunyuan/Hunyuan3D-2.1.git /app/Hunyuan3D-2.1

# Install Hunyuan3D dependencies
WORKDIR /app/Hunyuan3D-2.1
RUN pip install --no-cache-dir -r requirements.txt

# Build and install Hunyuan3D paint component
WORKDIR /app/Hunyuan3D-2.1/hy3dpaint
RUN pip install -e .

# Install additional dependencies
RUN pip install xformers flash-attn --no-build-isolation

# Set up model cache directory and environment
RUN mkdir -p /app/models /app/cache
ENV HF_HOME=/app/cache
ENV TRANSFORMERS_CACHE=/app/cache

# Go back to app directory
WORKDIR /app

# Copy backend code
COPY backend/ ./

# Create uploads and output directories
RUN mkdir -p uploads/sequences uploads/3d_generation outputs/3d_models

EXPOSE 4005

CMD ["uvicorn", "app:app", "--host", "0.0.0.0", "--port", "4005", "--reload"]